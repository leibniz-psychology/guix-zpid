commit ef4d8e0e0f9349dab8ce4973e01222818aa83836
Author: Lars-Dominik Braun <ldb@leibniz-psychology.org>
Date:   Fri Aug 21 09:30:05 2020 +0200

    rserver: Add ability to listen on UNIX domain socket
    
    This includes a few fixes for LocalStreamAsyncServer, which looks
    unused and unmaintained.

diff --git a/src/cpp/core/include/core/http/LocalStreamAsyncServer.hpp b/src/cpp/core/include/core/http/LocalStreamAsyncServer.hpp
index 577dd359f2..c01266ab16 100644
--- a/src/cpp/core/include/core/http/LocalStreamAsyncServer.hpp
+++ b/src/cpp/core/include/core/http/LocalStreamAsyncServer.hpp
@@ -52,8 +52,8 @@ public:
          // a stream created by root and then torn down after yielding
          // privilege to a different user)
          if (error && (
-                error.code() != boost::system::errc::permission_denied &&
-                error.code() != boost::system::errc::operation_not_permitted
+                error.getCode() != boost::system::errc::permission_denied &&
+                error.getCode() != boost::system::errc::operation_not_permitted
             ))
             LOG_ERROR(error);
       }
@@ -75,7 +75,7 @@ public:
          return error ;
       
       // initialize stream dir
-      error = initializeStreamDir(localStreamPath_.parent());
+      error = initializeStreamDir(localStreamPath_.getParent());
       if (error)
          return error;
 
diff --git a/src/cpp/server/ServerInit.cpp b/src/cpp/server/ServerInit.cpp
index ae19737663..88f1c68afa 100644
--- a/src/cpp/server/ServerInit.cpp
+++ b/src/cpp/server/ServerInit.cpp
@@ -18,6 +18,7 @@
 #include <shared_core/Error.hpp>
 
 #include <core/http/TcpIpAsyncServer.hpp>
+#include <core/http/LocalStreamAsyncServer.hpp>
 
 #include <server/ServerOptions.hpp>
 
@@ -28,18 +29,33 @@ namespace server {
 
 http::AsyncServer* httpServerCreate(const http::Headers& additionalHeaders)
 {
-   return new http::TcpIpAsyncServer("RStudio",
-                                     std::string(),
-                                     !options().wwwEnableOriginCheck(),
-                                     options().wwwAllowedOrigins(),
-                                     additionalHeaders);
+   if (options().wwwSocket() != "") {
+      return new http::LocalStreamAsyncServer("RStudio",
+                                        std::string(),
+                                        core::system::UserReadWriteMode,
+                                        !options().wwwEnableOriginCheck(),
+                                        options().wwwAllowedOrigins(),
+                                        additionalHeaders);
+   } else {
+      return new http::TcpIpAsyncServer("RStudio",
+                                        std::string(),
+                                        !options().wwwEnableOriginCheck(),
+                                        options().wwwAllowedOrigins(),
+                                        additionalHeaders);
+   }
 }
 
 Error httpServerInit(http::AsyncServer* pAsyncServer)
 {
    Options& options = server::options();
-   return dynamic_cast<http::TcpIpAsyncServer*>(pAsyncServer)->init(
-                                 options.wwwAddress(), options.wwwPort());
+   if (options.wwwSocket() != "") {
+      FilePath streamPath(options.wwwSocket());
+      return dynamic_cast<http::LocalStreamAsyncServer*>(pAsyncServer)->init(
+                                    streamPath);
+   } else {
+      return dynamic_cast<http::TcpIpAsyncServer*>(pAsyncServer)->init(
+                                    options.wwwAddress(), options.wwwPort());
+   }
 }
 
 } // namespace server
diff --git a/src/cpp/server/ServerOptions.cpp b/src/cpp/server/ServerOptions.cpp
index 42ba8c6f33..ffded3f1e0 100644
--- a/src/cpp/server/ServerOptions.cpp
+++ b/src/cpp/server/ServerOptions.cpp
@@ -241,6 +241,9 @@ ProgramStatus Options::read(int argc,
       ("www-port",
          value<std::string>(&wwwPort_)->default_value(""),
          "port to listen on")
+      ("www-socket",
+         value<std::string>(&wwwSocket_)->default_value(""),
+         "path to listen on")
       ("www-url-path-prefix",
          value<std::string>(&wwwUrlPathPrefix_)->default_value("/"),
          "the path prefix added by a proxy to the RStudio url")
diff --git a/src/cpp/server/include/server/ServerOptions.hpp b/src/cpp/server/include/server/ServerOptions.hpp
index 99b1c35349..9edc320d58 100644
--- a/src/cpp/server/include/server/ServerOptions.hpp
+++ b/src/cpp/server/include/server/ServerOptions.hpp
@@ -114,6 +114,11 @@ public:
       }
    }
 
+   std::string wwwSocket() const
+   { 
+      return std::string(wwwSocket_.c_str()) ; 
+   }
+
    std::string wwwUrlPathPrefix() const
    {
       return std::string(wwwUrlPathPrefix_.c_str()); 
@@ -329,6 +334,7 @@ private:
    std::vector<std::string> serverAddHeaders_;
    std::string wwwAddress_ ;
    std::string wwwPort_ ;
+   std::string wwwSocket_ ;
    std::string wwwUrlPathPrefix_ ;
    std::string wwwLocalPath_ ;
    std::string wwwSymbolMapsPath_;
