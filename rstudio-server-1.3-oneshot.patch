commit 3bd073019761494d49aa41e58c9af315c1c93fbd
Author: Lars-Dominik Braun <lars@6xq.net>
Date:   Fri Aug 21 10:50:21 2020 +0200

    rserver: Add option to terminate server after session terminates
    
    Add a oneshot option, which is useful in combination with
    `--auth-none=1` and rsession’s `--session-timeout-minutes`. Terminating
    the session will also quit the server, so it won’t linger if unused.

diff --git a/src/cpp/server/ServerOptions.cpp b/src/cpp/server/ServerOptions.cpp
index ffded3f1e0..9e47e34721 100644
--- a/src/cpp/server/ServerOptions.cpp
+++ b/src/cpp/server/ServerOptions.cpp
@@ -213,6 +213,9 @@ ProgramStatus Options::read(int argc,
          value<bool>(&serverDaemonize_)->default_value(
                                       core::system::effectiveUserIsRoot()),
          "run program as daemon")
+      ("server-oneshot",
+         value<bool>(&serverOneshot_)->default_value(false),
+         "terminate server when first session terminates")
       ("server-pid-file",
          value<std::string>(&serverPidFile_)->default_value("/var/run/rstudio-server.pid"),
          "location of pid file to write (only in daemon mode)")
diff --git a/src/cpp/server/ServerSessionManager.cpp b/src/cpp/server/ServerSessionManager.cpp
index e7e6af38c9..1e5d6a1ba1 100644
--- a/src/cpp/server/ServerSessionManager.cpp
+++ b/src/cpp/server/ServerSessionManager.cpp
@@ -200,6 +200,9 @@ core::system::ProcessConfig sessionProcessConfig(
 
 void onProcessExit(const std::string& username, PidType pid)
 {
+   if (server::options().serverOneshot()) {
+      ::kill(::getpid(), SIGINT);
+   }
 }
 
 } // anonymous namespace
diff --git a/src/cpp/server/include/server/ServerOptions.hpp b/src/cpp/server/include/server/ServerOptions.hpp
index 9edc320d58..b4277893e9 100644
--- a/src/cpp/server/include/server/ServerOptions.hpp
+++ b/src/cpp/server/include/server/ServerOptions.hpp
@@ -79,6 +79,8 @@ public:
    
    bool serverDaemonize() const { return serverDaemonize_; }
 
+   bool serverOneshot() const { return serverOneshot_; }
+
    std::string serverPidFile() const { return serverPidFile_; }
 
    bool serverSetUmask() const { return serverSetUmask_; }
@@ -326,6 +328,7 @@ private:
    std::string serverWorkingDir_;
    std::string serverUser_;
    bool serverDaemonize_;
+   bool serverOneshot_;
    std::string serverPidFile_;
    bool serverAppArmorEnabled_;
    bool serverSetUmask_;
