From c5f9eebc0a29e438e157e7efd3e71b18b0c1672d Mon Sep 17 00:00:00 2001
From: Lars-Dominik Braun <lars@6xq.net>
Date: Wed, 10 Feb 2021 09:43:32 +0100
Subject: [PATCH 1/4] rserver: Add ability to listen on UNIX domain socket

---
 src/cpp/server/ServerInit.cpp      | 30 +++++++++++++++++++++++-------
 src/cpp/server/server-options.json |  7 +++++++
 2 files changed, 30 insertions(+), 7 deletions(-)

diff --git a/src/cpp/server/ServerInit.cpp b/src/cpp/server/ServerInit.cpp
index f68e25b8df..2c05558436 100644
--- a/src/cpp/server/ServerInit.cpp
+++ b/src/cpp/server/ServerInit.cpp
@@ -18,6 +18,7 @@
 #include <shared_core/Error.hpp>
 
 #include <core/http/TcpIpAsyncServer.hpp>
+#include <core/http/LocalStreamAsyncServer.hpp>
 
 #include <server/ServerOptions.hpp>
 
@@ -28,18 +29,33 @@ namespace server {
 
 http::AsyncServer* httpServerCreate(const http::Headers& additionalHeaders)
 {
-   return new http::TcpIpAsyncServer("RStudio",
-                                     std::string(),
-                                     !options().wwwEnableOriginCheck(),
-                                     options().wwwAllowedOrigins(),
-                                     additionalHeaders);
+   if (options().wwwSocket() != "") {
+      return new http::LocalStreamAsyncServer("RStudio",
+                                        std::string(),
+                                        core::FileMode::USER_READ_WRITE,
+                                        !options().wwwEnableOriginCheck(),
+                                        options().wwwAllowedOrigins(),
+                                        additionalHeaders);
+   } else {
+      return new http::TcpIpAsyncServer("RStudio",
+                                        std::string(),
+                                        !options().wwwEnableOriginCheck(),
+                                        options().wwwAllowedOrigins(),
+                                        additionalHeaders);
+   }
 }
 
 Error httpServerInit(http::AsyncServer* pAsyncServer)
 {
    Options& options = server::options();
-   return dynamic_cast<http::TcpIpAsyncServer*>(pAsyncServer)->init(
-                                 options.wwwAddress(), options.wwwPort());
+   if (options.wwwSocket() != "") {
+      FilePath streamPath(options.wwwSocket());
+      return dynamic_cast<http::LocalStreamAsyncServer*>(pAsyncServer)->init(
+                                    streamPath);
+   } else {
+      return dynamic_cast<http::TcpIpAsyncServer*>(pAsyncServer)->init(
+                                    options.wwwAddress(), options.wwwPort());
+   }
 }
 
 } // namespace server
diff --git a/src/cpp/server/server-options.json b/src/cpp/server/server-options.json
index c8f0c3e05c..f1dc1c22b8 100644
--- a/src/cpp/server/server-options.json
+++ b/src/cpp/server/server-options.json
@@ -113,6 +113,13 @@
             "skipAccessorGeneration": true,
             "description": "The port that RStudio Server will bind to while listening for incoming connections. If left empty, the port will be automatically determined based on your SSL settings (443 for SSL, 80 for no SSL)."
          },
+         {
+            "name": "www-socket",
+            "memberName": "wwwSocket_",
+            "type": "string",
+            "defaultValue": "",
+            "description": "UNIX socket to listen on."
+         },
          {
             "name": "www-root-path",
             "memberName": "wwwRootPath_",
-- 
2.26.2

